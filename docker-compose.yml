version: "3"
services:
  ipfs:
    image: ipfs/go-ipfs:v0.19.1
    platform: linux/amd64
    ports:
      - "5001:5001"
    volumes:
      - ./data/ipfs:/data/ipfs
    restart: always
  postgres:
    image: postgres:15.2
    ports:
      - "5432:5432"
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
      # FIXME: remove this env. var. which we shouldn't need. Introduced by
      # <https://github.com/graphprotocol/graph-node/pull/3511>, maybe as a
      # workaround for https://github.com/docker/for-mac/issues/6270?
      PGDATA: "/var/lib/postgresql/data"
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    restart: always
  node-zkatana-testnet:
    container_name: node-zkatana
    image: graphprotocol/graph-node
    platform: linux/amd64
    ports:
      - '8400:8000'
      - '8401:8001'
      - '8420:8020'
      - '8430:8030'
      - '8440:8040'
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      ethereum: 'zkatana:https://rpc.zkatana.gelato.digital	'
      GRAPH_LOG: info
      GRAPH_GETH_ETH_CALL_ERRORS: 'execution fatal'
      GRAPH_GETH_ETH_CALL_ERRORS: 'Response is too big'
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1024M